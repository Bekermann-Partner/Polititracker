name: Run DEV CI/CD

on:
  pull_request:
  push:
    branches: [ "dev" ]

env:
  REPO: polititracker
  #  REGISTRY: ghcr.io
  IMAGE: dev
  PUSH_SHA: ${{ github.sha }}
  GCP_REGION: europe-west3
  GCP_PROJECT_ID: polititracker-448419

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set vars
        run: |
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
          echo "IMAGE_TAG=${GCP_REGION}-docker.pkg.dev/$PROJECT/$REPO/$IMAGE" >> $GITHUB_ENV
        env:
          REPO: '${{ github.repository }}'

      #      - name: Log in to the Container registry
      #        uses: docker/login-action@v2
      #        with:
      #          registry: ${{ env.REGISTRY }}
      #          username: ${{ github.actor }}
      #          password: ${{ secrets.GITHUB_TOKEN }}

      #      - name: Build and push Docker image
      #        run: |
      #          docker build --pull -t ${{ env.REGISTRY }}/${{ env.REPO_LC }}-dev:${{ env.PUSH_SHA }} .
      #          docker push ${{ env.REGISTRY }}/${{ env.REPO_LC }}-dev:${{ env.PUSH_SHA }}

      - name: GCP Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{secrets.GC_IMAGE_MANAGER_KEY}}"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Docker auth
        run: gcloud auth configure-docker ${{env.GCP_REGION}}-docker.pkg.dev --quiet

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{env.IMAGE_TAG}}


  eslint-and-types:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          npm install

      - name: Run ESLint
        run: |
          npx --yes eslint ./src

      - name: Run TypeScript Type Check
        run: |
          npx --yes tsc --noEmit

  prettier-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          npm install

      - name: Run Prettier Check
        run: |
          npx --yes prettier --config .prettierrc --check "./src/**/*.{tsx,jsx,ts,js}"
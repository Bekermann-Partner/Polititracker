name: Dev CI/CD

on:
  pull_request:
  push:
    branches: [ "dev" ]

#env:
#  PUSH_SHA: ${{ github.sha }}
#  GCP_IMAGE: dev
#  GCP_REGION: europe-west3
#  GCP_REPO: polititracker
#  GCP_PROJECT_ID: polititracker-448419

env:
  SERVICE_NAME: polititracker
  PROJECT_ID: polititracker-448419
  DOCKER_IMAGE_URL: europe-west4-docker.pkg.dev/polititracker-448419/cloud-run-source-deploy/website/polititracker 
    
jobs:
  eslint-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          npm install

      - name: Run ESLint
        run: |
          npx --yes eslint ./src

      - name: Run TypeScript Type Check
        run: |
          npx --yes tsc --noEmit

  prettier-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          npm install

      - name: Run Prettier Check
        run: |
          npx --yes prettier --config .prettierrc --check "./src/**/*.{tsx,jsx,ts,js}"

  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GC_IMAGE_MANAGER_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker europe-west4-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest -f Dockerfile .
          docker push ${{ env.DOCKER_IMAGE_URL }}:latest

      - name: Deploy to Cloud Run
        run: |
          echo SERVICE_NAME $SERVICE_NAME
          gcloud run deploy $SERVICE_NAME \
            --image ${{ env.DOCKER_IMAGE_URL }}:latest \
            --region europe-west4 \
            --allow-unauthenticated
            
#      - name: Set vars
#        run: |
#          echo "REPO_LC=${GH_REPO,,}" >>${GITHUB_ENV}
#          echo "IMAGE_TAG=${GCP_REGION}-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO/$GCP_IMAGE" >> $GITHUB_ENV
#          echo "COMMIT_HASH_SHORT=$(echo ${{github.sha}} | cut -c1-7)" >> $GITHUB_ENV
#        env:
#          GH_REPO: '${{ github.repository }}'

#      - name: GCP Auth
#        uses: google-github-actions/auth@v1
#        with:
#          credentials_json: "${{secrets.GC_IMAGE_MANAGER_KEY}}"

#      - name: Setup Cloud SDK
#        uses: google-github-actions/setup-gcloud@v1

#      - name: Docker auth
#        run: gcloud auth configure-docker ${{env.GCP_REGION}}-docker.pkg.dev --quiet

#      - name: Build & Push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ${{env.IMAGE_TAG}}

#      - name: Deploy to Cloud Run
#        run: |
#          DATE=$(date +%d.%m.%Y)
#          gcloud run deploy dev \
#          --image="${{env.IMAGE_TAG}}" \
#          --region="${{env.GCP_REGION}}" \
#          --update-env-vars "BUILD_DATE=$DATE,BUILD_VERSION=${{env.COMMIT_HASH_SHORT}}" \
#          --platform=managed --quiet
